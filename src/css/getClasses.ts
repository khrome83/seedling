import { readLines } from "https://deno.land/std@0.67.0/io/mod.ts";
import * as path from "https://deno.land/std@0.67.0/path/mod.ts";

const filename = path.join(Deno.cwd(), "src/css/tailwind-ui.css");
let fileReader = await Deno.open(filename);

const order: Set<string> = new Set();
const rawClassRe = /^\s*\.([a-zA-Z0-9\-\/\.(\\:)]+)/;
for await (let line of readLines(fileReader)) {
  if (rawClassRe.test(line)) {
    const [full, classRaw] = line.match(rawClassRe) || [];
    const parts = classRaw.replaceAll("\\", "").split(":");
    let className = parts.filter((part) => {
      if (part.length === 0) return false;

      switch (part) {
        case "hover":
        case "focus":
        case "active":
        case "visited":
        case "focus-within":
        case "focus-visible":
        case "checked":
        case "disabled":
        case "first-child":
        case "last-child":
        case "nth-child(odd)":
        case "nth-child(even)":
        case "-moz-placeholder":
        case "-ms-input-placeholder":
        case "placeholder":
        case "-ms-expand":
        case "-ms-check":
          return false;
        default:
          return true;
      }
    }).join(":");

    order.add(className);
  }
}

let content =
  "// This file is automatically generated, to update use 'getClasses.ts'";
content +=
  "\n// This is used to finalize the order of classes to match tailwind css output";
content += "\n//";
content += "\n//   deno run --allow-read --allow-write src/css/getClasses.ts";
content += "\n\nexport default new Set([";

order.forEach((value) => {
  content += `\n  "${value}",`;
});

content += "\n]) as Set<string>;\n";

const orderMapPath = path.join(Deno.cwd(), `src/css/orderMap.ts`);

// Make file to identiy that we attempted to install
await Deno.writeTextFile(
  orderMapPath,
  content,
);
